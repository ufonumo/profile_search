{"version":3,"sources":["components/profile.js","components/pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Profiles","profiles","loading","handleFilter","useState","search","setSearch","setQuery","Spinner","animation","className","role","Form","inline","onSubmit","e","preventDefault","FormControl","type","value","onChange","target","placeholder","Button","variant","onClick","Group","controlId","Label","Control","as","filter","profile","FirstName","toLowerCase","includes","map","LastName","Gender","id","Email","PhoneNumber","CreditCardType","PaymentMethod","CreditCardNumber","UserName","DomainName","href","URL","Pagination","profilePerPage","totalProfiles","paginate","pageNumbers","i","Math","ceil","push","number","App","newProfiles","setNewProfiles","setProfiles","setloading","currentPage","setCurrentPage","useEffect","a","fetch","response","json","data","records","getProfiles","indexOfLastPost","indexOfFirstPost","currentProfiles","slice","filteredWord","console","log","filtered","item","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f9862fe.chunk.js","sourcesContent":["import Spinner from 'react-bootstrap/Spinner';\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { AiOutlineSearch } from \"react-icons/ai\"\r\nimport { BsFillPersonLinesFill } from \"react-icons/bs\"\r\nimport { BsBagFill } from \"react-icons/bs\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { FaFemale } from \"react-icons/fa\";\r\nimport { FaMale } from \"react-icons/fa\";\r\nimport { HiUser } from \"react-icons/hi\";\r\nimport { FaPhoneSquareAlt } from \"react-icons/fa\";\r\nimport { RiGenderlessFill } from \"react-icons/ri\";\r\nimport { RiSecurePaymentFill } from \"react-icons/ri\";\r\nimport { BiCreditCard } from \"react-icons/bi\";\r\nimport { BiUserCircle } from \"react-icons/bi\";\r\nimport { FaFirefoxBrowser } from \"react-icons/fa\";\r\nimport { ImListNumbered } from \"react-icons/im\";\r\nimport { CgBrowse } from \"react-icons/cg\";\r\n\r\n\r\nexport const Profiles = ({ profiles, loading, handleFilter} ) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [query, setQuery] = useState('');\r\n\r\n    const updateSearch = e =>{\r\n        setSearch(e.target.value);\r\n      };\r\n    \r\n    const getSearch = e =>{\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n    };\r\n\r\n\r\n    if(loading){\r\n        return <Spinner animation=\"border\" className=' text-center' role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>;\r\n    }\r\n\r\n    return (\r\n        <div className='row profile'>\r\n\r\n            <div className='col-lg-4 form_search'>\r\n                <p className='details'>Welcome to your dashboard, kindly sort through the user database by searching for a user, or using the options below to filter for users based on their gender, or payment methods</p>\r\n                <Form inline onSubmit={getSearch} className='search_form justify-content-center'>\r\n                    <FormControl type=\"text\" value={search} onChange={updateSearch} placeholder='Search for a patient' className=\"mr-sm-2 search_bar\" />\r\n                    <Button  type=\"submit\" className=\"form_button\" variant=\"outline-success\"> <AiOutlineSearch/> </Button>\r\n                </Form>\r\n\r\n                <div className='category'>\r\n                    <h6>Show Users</h6>\r\n\r\n                    <div className='row'>\r\n                        <button className='col-lg-3 icons' value='All' onClick={handleFilter} >\r\n                            <BsFillPersonLinesFill/> <br></br>\r\n                            All users\r\n                        </button>\r\n                        <button className='col-lg-3 icons' onClick={handleFilter}  value='\"Prefer to skip\"'>\r\n                            <BsBagFill/>  <br></br>\r\n                          Prefer to skip \r\n                        </button>\r\n                        <button className='col-lg-3 icons pt-3' value='Female' onClick={handleFilter}>\r\n                            <FaFemale/>  <br></br>\r\n                         Female\r\n                        </button>\r\n                        <button className='col-lg-3 icons pt-3' value='Male' onClick={handleFilter}>\r\n                            <FaMale/>  <br></br>\r\n                          Male\r\n                        </button>\r\n                        <div className=' col-lg-6 pt-3 col-sm-12 icons text-center'>\r\n\r\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Label>  <BiCreditCard/> Payment Method</Form.Label>\r\n                                <Form.Control as=\"select\"  onClick={handleFilter}>\r\n                                    <option >Select a Payment Method</option>\r\n                                    <option value='\"check\"'> Check</option>\r\n                                    <option value='\"cc\"'>CC </option>\r\n                                    <option  value='\"money order\"'> Money Order </option>\r\n                                    <option value='\"paypal\"' >Pay pal</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='col-lg-8 results'>\r\n                <div className=\"row\">\r\n                    {profiles.filter((profile) =>{\r\n                        if(search === ''){\r\n                            return profile\r\n                        } else if(profile.FirstName.toLowerCase().includes(search.toLowerCase())){\r\n                            return profile\r\n                        }\r\n                    }).map( profile => (\r\n\r\n                        <div key={profile.Email} className='col-lg-4 user middle page_card'>\r\n\r\n                            <div  key={profile.Email} className='list-group-item front'>\r\n                                <p> <b><HiUser className=\"profile_icons\"/></b> :  {profile.FirstName} {profile.LastName} </p>\r\n                                <p> <RiGenderlessFill className=\"profile_icons\"/> : {profile.Gender}</p>\r\n                                <p className='email'>\r\n                                     <MdEmail id='profile_email' className=\"profile_icons\"/> :  {profile.Email}</p>\r\n                                <p>\r\n                                    <FaPhoneSquareAlt className=\"profile_icons\"/> : {profile.PhoneNumber}</p>\r\n                                <p><BiCreditCard className=\"profile_icons\"/> : {profile.CreditCardType}</p>\r\n                                <p> <RiSecurePaymentFill className=\"profile_icons\"/> : {profile.PaymentMethod}</p>\r\n\r\n                            </div>\r\n\r\n                            <div className='back list-group-item back_content'>\r\n                                <div className=' middle middle_content pt-4'>\r\n                                <p> <b><ImListNumbered className=\"profile_icons\"/></b> :  {profile.CreditCardNumber}  </p>\r\n                                <p className='email'>\r\n                                     <BiUserCircle  className=\"profile_icons\"/> :  {profile.UserName}\r\n                                </p>\r\n                                <p> <FaFirefoxBrowser className=\"profile_icons\"/> : {profile.DomainName}</p>\r\n                                <p><CgBrowse className=\"profile_icons\"/> : <a className='profile_url' href={profile.URL}> {profile.URL}</a> </p>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    \r\n                    \r\n                    ))}\r\n                </div>\r\n              \r\n            </div>\r\n\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const Pagination = ({profilePerPage, totalProfiles, paginate}) => {\r\n\r\n    const pageNumbers=[];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalProfiles / profilePerPage); i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination mx-auto'>\r\n                {pageNumbers.map(number =>(\r\n                    <li key={number} className='page-item mx-auto'>\r\n                        <a onClick={() => paginate(number)} className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Profiles } from './components/profile';\nimport { Pagination } from './components/pagination';\n\n\nconst App = ()  => {\n\n  const API_BASE = 'https://api.enye.tech/v1/challenge/records';\n  \n  const [newProfiles, setNewProfiles] = useState([]);\n  let [profiles, setProfiles] = useState([]); //this sets the state\n  let [loading, setloading] = useState(false);\n  let [currentPage, setCurrentPage] = useState(1);\n  let [profilePerPage] = useState(20);\n\n  useEffect(()=>{\n    const getProfiles = async () =>{ // this gets the profile data from the api\n      setloading(true)\n      const response = await fetch(API_BASE);\n      let data = await response.json();\n      setProfiles(data.records.profiles);\n      setNewProfiles(data.records.profiles);\n      setloading(false)\n    }\n    getProfiles();\n\n  }, []);\n\n  // GET CURRENT PROFILES\n  const indexOfLastPost = currentPage * profilePerPage;\n  const indexOfFirstPost = indexOfLastPost - profilePerPage;\n  const currentProfiles = profiles.slice(indexOfFirstPost, indexOfLastPost);\n\n  // CHANGE PAGE\n  const paginate = (pageNumber) =>{\n    setCurrentPage(pageNumber)\n  };\n\n  const handleFilter = (e) =>{ // this filters the data according to the keyword values\n    let filteredWord = e.target.value;\n\n    if(filteredWord === 'All'){\n      setProfiles(newProfiles)\n        console.log(profiles);\n        return profiles\n        \n    }\n    else if(filteredWord === 'Female'){\n        const filtered = newProfiles.filter(item => item.Gender === 'Female')\n        setProfiles(filtered)\n    }\n    else if(filteredWord === 'Male'){\n        const filtered = newProfiles.filter(item => item.Gender === 'Male')\n        setProfiles(filtered);\n\n    }\n    else if(filteredWord === '\"Prefer to skip\"'){\n        const filtered = newProfiles.filter(item => item.Gender === 'Prefer to skip')\n        setProfiles(filtered);\n    }\n    else if(filteredWord === '\"money order\"'){\n      const filtered = newProfiles.filter(item => item.PaymentMethod === 'money order')\n      setProfiles(filtered);    \n    }\n    else if(filteredWord === '\"cc\"'){\n      const filtered = newProfiles.filter(item => item.PaymentMethod === 'cc')\n      setProfiles(filtered); \n   \n    }\n    else if(filteredWord === '\"check\"'){\n      const filtered = newProfiles.filter(item => item.PaymentMethod === 'check')\n      setProfiles(filtered);  \n    }\n    else if(filteredWord === '\"paypal\"'){\n      const filtered = newProfiles.filter(item => item.PaymentMethod === 'paypal')\n      setProfiles(filtered); \n    }\n};\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className='text-center'>Profiles</h1>\n\n      <div >\n\n        <Profiles profiles={currentProfiles} loading={loading} handleFilter={handleFilter}/>\n        <Pagination\n         profilePerPage={profilePerPage}\n         totalProfiles={profiles.length}\n           paginate={paginate}\n         />\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}